function __$styleInject(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===n&&o.firstChild?o.insertBefore(r,o.firstChild):o.appendChild(r),r.styleSheet?r.styleSheet.cssText=e:r.appendChild(document.createTextNode(e))}}import PropTypes from"prop-types";import React from"react";__$styleInject("._arrow_1rec4_5 {\n  border: 7px solid transparent;\n  left: -7px !important;\n  position: absolute !important; }\n  ._arrow_1rec4_5._bottom_1rec4_9 {\n    bottom: 100% !important; }\n\n._wrapper_1rec4_12 {\n  position: fixed !important;\n  /* state */ }\n  ._wrapper_1rec4_12._invisible_1rec4_15 {\n    pointer-events: none !important;\n    visibility: hidden !important; }\n  ._wrapper_1rec4_12._visible_1rec4_18 {\n    pointer-events: auto !important;\n    visibility: visible !important; }\n\n/* tooltips are screen-media only */\n@media print {\n  ._wrapper_1rec4_12 {\n    display: none !important; } }\n\n@media speech {\n  ._wrapper_1rec4_12 {\n    display: none !important; } }\n",{});var styles={backgroundColor:"#222222",spacing:"14px",arrow:"_arrow_1rec4_5",bottom:"_bottom_1rec4_9",wrapper:"_wrapper_1rec4_12",invisible:"_invisible_1rec4_15",visible:"_visible_1rec4_18"},classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),defineProperty=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},inherits=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},possibleConstructorReturn=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t};function getStyleForTooltipArrow(e){var t=e.location,n=e.backgroundColor,o=""+t.charAt(0).toUpperCase()+t.slice(1);return defineProperty({},"border"+o+"Color",n)}function getStyleForTooltipBody(e,t,n,o){if(!n||!o)return{};var r=n.getBoundingClientRect(),i=o.getBoundingClientRect(),s=r.left+r.width/2,l=i.width/2;return l>s?l=s:s+l>document.documentElement.clientWidth&&(l=s+i.width-document.documentElement.scrollWidth),{transform:"translateX(-"+l+"px)"}}function getStyleForTooltipComponent(e,t){return{visibility:t.showTooltip?"visible":"hidden"}}function getStyleForTooltipContent(e){return{backgroundColor:e.backgroundColor}}function getStyleForTooltipWrapper(e,t,n,o){var r=e.location,i=e.spacing,s=e.zIndex;if(!n)return{};var l={},a=n.getBoundingClientRect(),p=o.getBoundingClientRect();switch(s&&(l.zIndex=s),r){case"bottom":return _extends({},l,{left:a.left+a.width/2,top:a.top+a.height+i+1});case"top":return _extends({},l,{left:a.left+a.width/2,top:a.top-p.height-i-1});default:return console.warn("unknown tooltip direction '"+r+"'"),l}}var TOOLTIP_LOCATION_SHAPE=PropTypes.oneOf(["bottom","top"]),TT=function(e){function t(e){classCallCheck(this,t);var n=possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.onMouseEnter=function(){n.show()},n.onMouseLeave=function(){n.hide()},n.onScroll=function(e){n.state.showTooltip&&n.forceUpdate()},n.state={showTooltip:!1},n.el=null,n.parentEl=null,n.bodyEl=null,n.componentEl=null,n}return inherits(t,e),createClass(t,[{key:"componentDidMount",value:function(){this.parentEl=this.el.parentElement,this.applyListeners(!0)}},{key:"componentWillUnmount",value:function(){this.applyListeners(!1),this.parentEl=null,this.el=null,this.bodyEl=null,this.componentEl=null}},{key:"applyListeners",value:function(e){e?(this.parentEl.addEventListener("mouseenter",this.onMouseEnter),this.parentEl.addEventListener("mouseleave",this.onMouseLeave),window.addEventListener("scroll",this.onScroll)):(this.parentEl.removeEventListener("mouseenter",this.onMouseEnter),this.parentEl.removeEventListener("mouseleave",this.onMouseLeave),window.removeEventListener("scroll",this.onScroll))}},{key:"hide",value:function(){this.setState(function(){return{showTooltip:!1}})}},{key:"show",value:function(){this.setState(function(){return{showTooltip:!0}})}},{key:"render",value:function(){var e=this,t=this.props,n=t.children,o=t.id,r=t.location,i=this.state.showTooltip?styles.visible:styles.invisible,s=styles.arrow+" "+styles[r]+" "+i,l=styles[r]+" "+i,a=styles[r]+" "+i,p=styles.wrapper+" "+styles[r]+" "+i,c=getStyleForTooltipArrow(this.props,this.state,this.parentEl,this.bodyEl),u=getStyleForTooltipBody(this.props,this.state,this.parentEl,this.bodyEl),d=getStyleForTooltipComponent(this.props,this.state,this.parentEl,this.bodyEl),h=getStyleForTooltipContent(this.props,this.state,this.parentEl,this.bodyEl),y=getStyleForTooltipWrapper(this.props,this.state,this.parentEl,this.bodyEl);return React.createElement("div",{className:p,id:o,onMouseEnter:this.onMouseLeave,ref:function(t){return e.el=t},role:"tooltip",style:y},React.createElement("div",{className:a,ref:function(t){return e.componentEl=t},style:d},React.createElement("div",{className:l,ref:function(t){return e.bodyEl=t},style:u},React.createElement("div",{style:h},n)),React.createElement("div",{className:s,style:c})))}}]),t}(React.Component);TT.propTypes={backgroundColor:PropTypes.string,children:PropTypes.any,id:PropTypes.string.isRequired,location:TOOLTIP_LOCATION_SHAPE,spacing:PropTypes.number,zIndex:PropTypes.number},TT.defaultProps={backgroundColor:"#222222",location:"top",spacing:14,zIndex:0};export default TT;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
